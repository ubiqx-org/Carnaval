Scripts
-------

This directory contains:

* `git_utils.py`:     A utility module.
* `git_keywords.py`:  A git pre-commit script.
* Other stuff:        Other stuff.

The Python scripts are used to perform keyword substitution on program files
as they are committed to the repository, adding or updating the information
associated with specific keywords.

Carnaval uses keywords in its source files, which helps us keep track of
what happened when and who did it.  Yes, git also provides that information
(and in greater detail), but if'n all you've got is a copy of a file outside
of a repository then you're out of context and out of luck.  Keyword
substitution mitigates that problem.

Setting up your repository to support keyword substitution:

1. Make sure `git_keywords.py` is executable.

2. In the `<repository>/.git/hooks` directory:

 $ ln -s ../../scripts/git_keywords.py pre-commit

3. Make sure that the `<repository>/.gitattributes` file contains something
   that looks sort of like this:

 *.py kwsub=true
 0.README kwsub=true

4. Make sure that your username and e'mail address are correctly assigned in
   the `<repository>/.git/config` file.  If you are using a GitHub account,
   your e'mail address should probably be the address you're using on GitHub.

Stuff You Probably Already Know
-------------------------------

From the `carnaval/` directory, you can run the unit tests or generate
module documentation:

* Run doctest scripts: `python -m doctest -v <dir>/<module>.py`

* View module documentation: `pydoc <dir>.<module>`

* There is a tool called `pyclean` that is available in some distributions
  (and otherwise available for installation).  It'll clean up those pesky
  `.pyc` and `.pyo` files for you.

(I know these things exist, but I always need to be reminded how to use them.)

Bugs
----

* There is some sort of glitch in `git_keywords.py` that usually (but not
  always) causes keyword updates to occur twice (or so it seems).  As a
  result, it is often necessary run `git reset HEAD` on committed files
  immediately after committing them.

____
$Id: 0.README; 2019-04-30 20:22:27 -0500; crh$
